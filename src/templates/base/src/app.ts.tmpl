import express, { Request, Response, NextFunction } from 'express';
import cors from 'cors';
import helmet from 'helmet';
import morgan from 'morgan';
import { logger } from './utils/logger';

{{#if swagger}}
import { setupSwagger } from './config/swagger';
{{/if}}

const app = express();

// 미들웨어
app.use(cors());
app.use(helmet());
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// 로깅 미들웨어
app.use((req: Request, res: Response, next: NextFunction) => {
  logger.info(`${req.method} ${req.url}`);
  next();
});

{{#if swagger}}
// 스웨거 설정
setupSwagger(app);
{{/if}}

// 라우트
app.get('/', (req: Request, res: Response) => {
  res.json({ message: 'Welcome to {{projectName}} API' });
});

// API 라우트
{{#if authentication}}
import authRoutes from './modules/auth';
app.use('/api/auth', authRoutes);
{{/if}}

import userRoutes from './modules/user';
app.use('/api/users', userRoutes);

// 404 처리
app.use((req: Request, res: Response) => {
  res.status(404).json({ message: 'Route not found' });
});

// 오류 처리 미들웨어
app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
  logger.error(err.stack);
  res.status(500).json({ message: 'Internal server error' });
});

export default app;